<Window x:Class="ClockInNotifier.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClockInNotifier"
        mc:Ignorable="d" Icon="clock_icon.ico"
        ResizeMode="CanMinimize"
        Closing="OnClosing"
        Loaded="OnLoaded"
        StateChanged="OnStateChanged"
        Title="Clock In Notifier" Background="Gray" Height="450" Width="800">
    <Grid>
        <DataGrid HeadersVisibility="Column" CanUserResizeRows="False" CanUserResizeColumns="False" SelectionMode="Single" x:Name="DataGridList" HorizontalAlignment="Left" Height="200" Margin="280,200,0,0" VerticalAlignment="Top" Width="250">

            <!-- Table Styles -->
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Aquamarine" />
                    <Setter Property="FontWeight" Value="SemiBold" />
                    <Setter Property="BorderThickness" Value="0,0,1,2" />
                    <Setter Property="BorderBrush" Value="Black" />
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    <Style.Triggers>
                        <Trigger Property="DataGridCell.IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </DataGrid.Resources>

            <!-- Table Column Headers -->
            <DataGrid.Columns>
                <DataGridTextColumn Header="Hour" Width="*" IsReadOnly="True" CanUserResize="False" CanUserReorder="False" Binding="{Binding HourDisplay}" />
                <DataGridTemplateColumn Header="Image" Width="*" IsReadOnly="True" CanUserResize="False" CanUserReorder="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image PreviewMouseLeftButtonUp="RemoveRegistry"  RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" Width="30" Height="30" Source="{Binding Image}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <Trigger Property="DataGridCell.IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>

        <StackPanel Margin="30, 100, 515, 220">
            <TextBlock FontSize="20" FontWeight="ExtraBold" TextAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" FontStretch="Expanded" x:Name="baseShiftTime" >
                <TextBlock>Base shift time: </TextBlock>
                <TextBlock Text="{Binding BaseShiftTime}"></TextBlock>
            </TextBlock>
            <TextBlock FontSize="20" TextAlignment="Center" FontStretch="Expanded" FontWeight="ExtraBold" HorizontalAlignment="Stretch" VerticalAlignment="Top" x:Name="endShiftTimeTextBlock">
                <TextBlock>Time to leave:  </TextBlock>
                <TextBlock Text="{Binding EndShiftTime}"></TextBlock>
            </TextBlock>
        </StackPanel>

        <StackPanel Margin="350, 130, 350, 260">
            <TextBlock Text="{Binding HourDisplay}" FontSize="18" TextAlignment="Center" FontStretch="Expanded" FontWeight="ExtraBold" HorizontalAlignment="Stretch" VerticalAlignment="Center" x:Name="HourTextBlock" Height="31" />
        </StackPanel>

        <Button Content="Add Registry" HorizontalAlignment="Left" Margin="535,126,0,0" VerticalAlignment="Top" Height="40" Width="100" Click="AddHourRestry"/>
        <Button x:Uid="UpMinute" Content="Up" HorizontalAlignment="Left" Margin="406,100,0,0" VerticalAlignment="Top" Width="38" Height="30" Click="Button_Click" RenderTransformOrigin="0.513,1.05"/>
        <Button x:Uid="DownMinute" Content="Down" HorizontalAlignment="Left" Margin="406,161,0,0" VerticalAlignment="Top" Width="38" Height="31" Click="Button_Click"/>

        <Button x:Uid="UpHour" Content="Up" HorizontalAlignment="Left" Margin="350,100,0,0" VerticalAlignment="Top" Width="38" Height="30" Click="Button_Click" RenderTransformOrigin="0.513,1.05"/>
        <Button x:Uid="DownHour" Content="Down" HorizontalAlignment="Left" Margin="350,161,0,0" VerticalAlignment="Top" Width="38" Height="31" Click="Button_Click"/>

    </Grid>
</Window>
